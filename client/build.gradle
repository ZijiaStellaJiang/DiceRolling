/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'org.siouan.frontend-jdk11'version "6.0.0"
}

frontend {
    // On your CI platform only / do not include this line on non-ARMv7 platforms
    nodeDistributionUrlPathPattern.set("vVERSION/node-vVERSION-darwin-x64.TYPE")
    nodeVersion = '14.17.3'
    assembleScript = 'run build'
    cleanScript = 'run clean'
    checkScript = 'run check'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.6.2'
    testImplementation 'org.mockito:mockito-core:3+'
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
// https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.20.0'
    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.3'


}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
test{
    testLogging{
        showStandardStreams=true
        exceptionFormat='full'
    }
}
clover{
    compiler {
        additionalArgs = "-g:lines,source,vars"
    }
    report {
        xml=true
        html = true
    }
}





